{"name":"Magical Unicorn - MVC Error Toolkit","body":"### Now -YOU- can control your ASP.NET MVC Errors (again)!\r\nThere's a lot going wrong with ASP.NET MVC and the stock standard error handling.\r\n\r\n_It's broken._\r\n\r\nOut of the box:\r\n* It does a 302 redirect to an error page :sad:\r\n* It doesn't work with cshtml (Razor) views. Only Html (er, hello 1990?)\r\n* It's a *mess* to try and manually hook up and wire up all the extensibility points to handle most scenarios\r\n\r\nAs I said : PITA, broken, sad panda's.\r\n\r\nBut NuGet this package and you'll be happy hipsters once more!\r\n\r\n![I heart NuGet](http://i.imgur.com/HnY53.png)\r\n\r\nOr .. clone/fork this bad boy and help make something that is awesome become fully sick awesome!\r\n\r\n### Why would I want to do that? What does this do?\r\n\r\nYou can now create your own `.cshtml` files (with yummy yummy razor goodness) to handle any Http Status error code!\r\n* 500 Internal Errors\r\n* 404 Resource Not Found Errors\r\n* 401 Not Authorized Errors\r\n* [418 I'm a TeaPot](http://en.wikipedia.org/wiki/Hyper_Text_Coffee_Pot_Control_Protocol) (if you really care)\r\n\r\nBecause the error pages you make are just razor pages, you can have whatever magic fairy dust you want in there. `switch` statements? Sure! `if` checks? If that floats your boat! (<-- see what I did there?)\r\n\r\n### But .. but .. how can I use this most-excellent package in -my- MVC site?\r\n\r\nglad.you.asked.\r\n\r\n[![Click Me!!](http://i.imgur.com/3DGcb.png)](http://www.youtube.com/watch?v=Z0xAtW49698)\r\n\r\n\r\n## Now go!! Take back control of your error handling with your ASP.NET MVC applications! Quick! Stop reading! Go forth and fix your shiz up!\r\n\r\n.\r\n\r\n[No Unicorns were harmed in making this package. They were loved, hugged and occasionally wrestled and ridden.]\r\n\r\n.","tagline":"Take control of your ASP.NET MVC Errors!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}